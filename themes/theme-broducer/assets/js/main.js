console.log("This site was generated by Hugo.");
gsap.registerPlugin(ScrollTrigger);

document.addEventListener("DOMContentLoaded", () => {
  /* Scrollspy */
  const scrollSections = gsap.utils.toArray(".anchor-section");
  const links = gsap.utils.toArray(".menu-link");

  /* console.log(scrollSections);
console.log(links); */

  scrollSections.forEach((section, i) => {
    const link = links[i];
    ScrollTrigger.create({
      /* markers: true, */
      trigger: section,
      start: "top 100",
      end: "bottom 100",
      onEnter: () => link.classList.add("active"),
      onEnterBack: () => link.classList.add("active"),
      onLeave: () => link.classList.remove("active"),
      onLeaveBack: () => link.classList.remove("active"),
    });
  });

  /* Header shrink */
  ScrollTrigger.create({
    /*     markers: true, */
    trigger: ".header",
    start: "bottom 5%",
    endTrigger: "#home",
    end: "bottom 95%",
    scrub: 1.5,
    toggleClass: "scroll",
  });

  /* Close menu on click */
  const menuCheckbox = document.getElementById("menu-check");
  const menuLinks = document.querySelectorAll(".menu-list a");

  menuLinks.forEach((link) => {
    link.addEventListener("click", () => {
      menuCheckbox.checked = false;
    });
  });

  /* Scroll offset */
  document.querySelectorAll(".hero-button, .menu-link").forEach((link) => {
    link.addEventListener("click", function (e) {
      // Allow the default anchor behavior to occur
      const targetId = this.getAttribute("href").substring(1);
      const targetElement = document.getElementById(targetId);

      // Use a timeout to adjust the scroll position after the default behavior
      setTimeout(() => {
        // Calculate the height of the header dynamically
        const headerHeight = document.querySelector("header").offsetHeight;

        // Get the current position of the target after the default scroll
        const targetPosition = targetElement.getBoundingClientRect().top + window.scrollY;

        // Calculate 2vh in pixels
        const additionalOffset = window.innerHeight * 0.02;

        // Adjust the scroll position to account for the header height
        window.scrollTo({
          top: targetPosition - headerHeight + additionalOffset,
          behavior: "smooth",
        });
      }, 0);
    });
  });
});
